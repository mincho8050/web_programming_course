package oop0528; //.java파일에서 한번 만 선언한다. 

//*자리에 특정 클래스를 지정할 수 있고, 두루뭉실하게 할때는 *로 표시한다. 다 쓸 수 있을때 *표시.
//import는 ctrl+space로 불러오면 자동 코딩된다.

//사용하고자 하는 클래스의 팩키지 선언
import java.util.*;
import java.io.*;
import java.sql.*;

public class Test03_Sort {

	public static void main(String[] args) {
		/*
		 * Sort 정렬
		 * > 특정한 키(key field)를 기준으로 순서대로 재배치
		 * 
		 * 1) 정렬의 유형 
		 * > 오름차순 ascending ASC     : 1 > 10  , A > Z , a > z , ㄱ > ㅎ
		 * > 내림차순 descending DESC   
		 * > 앞이 크면 뒤로 바꾸는게 오름차순, 뒤가 크면 앞으로 바꾸는 것이 내림차순.
		 * 
		 * 2) 정렬의 방법
		 * > 삽입정렬(insertion sort)
		 * > 선택정렬(selection sort)
		 * > 버블정렬(bubble sort)
		 * > quick sort, shell sort, ~
		 */
		
		
		/* 
		 * 선택정렬(selection sort)
		 * 
		 * if(>){tmp=a,a=b,b=tmp} swap시킴. > 정렬
		 * 
		 * 9 7 5 3 1 >> 1 3 5 7 9
		 * a a+1 
		 * 
		 * 앞에 있는 수가 크면 바꾼다.
		 * 첫번째 수를 2,3,4,5 차례로 비교한다.
		 *  > 9 7 5 3 1 > 시작
		 *  > 7 9 5 3 1 > 첫번째 수인 9랑 두번째 7를 비교 9>7 맞음 순서바꾼거.
		 *  > 5 9 7 3 1 > 첫번째 수와 세번째 수를 비교 7>5 맞음, 순서바꾼거.
		 *  > 3 9 7 5 1 > 첫번째 수와 네번째 수 비교 5>3 맞음, 순서바꾼거.
		 *  > 1 9 7 5 3 > 첫번째, 마지막 수 비교 3>1 맞음, 순서바꾼거.
		 *  ----------------step 1
		 *  두번째부터비교(세번째,네번째,다섯번째와 비교)
		 *  > 1 7 9 5 3
		 *  > 1 5 9 7 3
		 *  > 1 3 9 7 5
		 *  ----------------step 2
		 *  세번째부터 비교(네번쨰,다섯번째와 비교)
		 *  > 1 3 7 9 5
		 *  > 1 3 5 9 7
		 *  ----------------step 3
		 *  네번째부터 비교(다섯번째와 비교)
		 *  > 1 3 5 7 9
		 *  4단계만에 sort 성공.
		 *  
		 *  ----------------step 4
		 *  만일  sort하고자 하는 대상이 n개라면 단계는 n-1단계
		 *  a번째라면 내 옆은 a+1번째.
		 *  
		 * 
		 * if(자신< ){rank++} > 등수구하기.
		 * if(==){     } > 이건 로또번호
		 * 알고리즘은 한끗 차이.
		 */
		
		/*
		 * 버블정렬(bubble sort)
		 * 
		 * 9 7 5 3 1 > 1 3 5 7 9
		 * if(>){tmp=a,a=b,b=tmp} swap시킴. > 정렬
		 * 
		 * 앞에 있는 수가 크면 바꾼다.
		 * 처음과 두번째 비교, 두번째와 세번째 비교, 세번째와 네번째 비교. 
		 * 
		 * 9 7 5 3 1 > 시작! 
		 * 7 9 5 3 1 > 9>7 맞음 바꿈 나머지는 그대로.
		 * 7 5 9 3 1 > 9>5 비교, 맞음. 바꾸고 나머지는 그대로.
		 * 7 5 3 9 1 > 9>3 맞음, 바꾸고 나머지 그대로
		 * 7 5 3 1 9 > 9>1 맞음, 바꾸고 나머지 그대로
		 * ---------------------------------------step 1
		 * 한바퀴를 돌아도 sort가 안됐어도 처음부터 똑같이 비교한다.
		 * 5 7 3 1 9 > 7>5 맞음, 바꿈
		 * 5 3 7 1 9 > 7>3 맞음
		 * 5 3 1 7 9 > 7>1 맞음
		 * 5 3 1 7 9 > 7>9 틀림 안바꿈.
		 * ---------------------------------------step 2
		 * 3 5 1 7 9 > 5>3 맞음 
		 * 3 1 5 7 9 > 5>1 맞음
		 * 3 1 5 7 9 > 5>7 틀림 안바꿈
		 * ---------------------------------------step 3
		 * 1 3 5 7 9 > 3>1 맞음 바꿈. 마지막!
		 * 4단계만에 sort 성공.
		 * ---------------------------------------step 4
		 * 
		 */
		
//------------------------------------------------------------------------------------------------------------------------
		
		int[] su={9,7,5,3,1};
		
		
		 // 문)
		 // selection sort 알고리즘을 이용해서
		 // 오름차순으로 정렬 후 출력하시오.
	
		
		//선생님이 하신것.
		
		for(int a=0;a<su.length-1;a++){ //-1 값을 넣어주는 이유는 su.length 는 길이가 5 (0,1,2,3,4) 이기 때문에
			                            //a=4가 되면 b=a+1이 되면 5가 되어서 su.length가 넘어버려서 
			                            // a<su.length-1 로 -1을 해줘야 한다.
			             				//그러면 처음 for문의 a의 범위는 a<4 이다.
			for(int b=a+1;b<su.length;b++){  //su.length 는 길이가 5 (0,1,2,3,4)
				if(su[a]>su[b]){
					int tmp=su[a];
					su[a]=su[b];
					su[b]=tmp;
				}
			}
		}//for
		
		for(int idx=0;idx<su.length;idx++){
			System.out.print(su[idx]+" ");
		}//for 출력값:1 3 5 7 9
		
		/*
		 * 9 7 5 3 1 오름차순
		 * 분석
		 * a=0   b=1  su[0]>su[1] > 9>7 맞음
		 *            tmp=9 > su[0]=7 > su[1]=9
		 *            7 9 5 3 1
		 * a=1   b=2  su[1]>su[2] > 9>5
		 *            tmp=9; su[1]=5; su[2]=9;
		 *            7 5 9 3 1
		 * a=2   b=3  su[2]>su[3] > 9>3 맞음
		 *            tmp=9;su[2]=3;su[3]=9;
		 *            7 5 3 9 1 
		 * a=3   b=4  su[3]>su[4] > 9>1 맞음
		 *            tmp=9;su[3]=1;su[4]=9;
		 *            7 5 3 1 9                          
		 *             
		 */
		
		
		
		System.out.println();
		
//----------------------------------------------------------------------------------------------------------------
		
		
		 // 문)
		 // bubble sort 알고리즘을 이용해서
		 // 내림차순으로 정렬 후 출력하시오.

		
		//선생님이 하신거.
		for(int c=3;c>=0;c--){//구하려는 갯수보다 한번 더 적게 단계를 거치니까 idx=3부터 시작.
			for(int d=0;d<=c;d++){
				if(su[d]<su[d+1]){
					int tmp2=su[d+1];
					su[d+1]=su[d];
					su[d]=tmp2;
				}//swap
			}
			
		}//for
		
		for(int idx=0;idx<su.length;idx++){
			System.out.print(su[idx]+" ");
		
		}//for 출력값 : 9 7 5 3 1
		
		System.out.println();
//----------------------------------------------------------------------------------------------------------------	
		
		
		//Arrays 클래스를 이용해서 정렬하기
		Arrays.sort(su);  //ascending sort 오름차순.

		for(int idx=0;idx<su.length;idx++){
			System.out.print(su[idx]+" ");
		
		}//for 출력값 1 3 5 7 9
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

	}//main

}//class
