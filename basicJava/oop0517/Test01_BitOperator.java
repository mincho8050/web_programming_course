package oop0517;

public class Test01_BitOperator {

	public static void main(String[] args) {
		// bit 연산자
		// 자바에서 잘 안씀.
		/*
		 *컴퓨터 용량의 단위
		 *컴퓨터의 신호체계 : 0,1 
		 *bit
		 *8bit > 1byte > 사람이 인식할 수 있는 최소단위
		 *예) 01000001 = A
		 *2byte용 언어 > 한글, 한자, 일어...
		 *
		 *2^10(2의10승) > 1024byte > Kilo Byte
		 *2^20 > Mega Byte
		 *2^30 > Giga Byte
		 *
		 *KB > MB > GB > TB > NB
		 */

		
		System.out.println(16<<3); //16*2^3
		System.out.println(16>>3); //16/2^3
		
		/*
		 * shift 연산자
		 * << : left shift 연산자 : 대상*2^n(2의n승)
		 * >> : right shift 연산자 : 대상/2^n
		 * 
		 * 수의 체계: 2진수 0 1 
		 *          8진수 0 1 2 3 4 5 6 7 
		 *         10진수 0 1 2 3 4 5 6 7 8 9
		 *         16진수 0 1 2 3 4 5 6 7 8 9 A B C D E F
		 *         
		 * 문) 10진수 5를 2진수로 변환
		 * > 00000101 : 2로 계속 나누면 됨. 101이 나오는데 8byte로 만들어야 해서 앞에 0을 8개 추가.
		 * 
		 * 문) 10진수 9를 2진수로 변환.
		 * > 00001001
		 * 
		 * 2진수를 10진수로 옮길 때 (2의n승을 이용.)
		 * 128 64 32 16 8 4 2 1
		 * >              1 0 1  > 5
		 * >            1 0 0 1  > 9
		 * >            1 1 0 1  > 13
		 * >          1 0 0 0 0  > 16
		 * 근데 모두 8byte로 표현하기 때문에 16은 00010000
		 * <<3(왼쪽으로 3칸) > 10000 인데 뒤에를 0으로 채운다(8byte) > 10000000 이것을 10진수로 바꾸면
		 *  >128이다.
		 *  
		 *  00010000 를 >>3(오른쪽으로 3칸) > 00010 > 00000010(8byte로 변환) > 10진수로 바꾸면 2
		 *  
		 */
		
		
//-----------------------------------------------------------------------------------------		
		
		System.out.println(~5); //1의 보수 연산자 , 출력값-6 
		
		
		/*
		 * 음수(singed값)를 표현하는 방식
		 * > 1의 보수
		 * > 2의 보수
		 * > 부호와 절대치 방식
		 *  
		 */
		
//-----------------------------------------------------------------------------------------
		
		System.out.println(5&3);  //비트곱 연산자
		System.out.println(5|3);  //비트합 연산자
		
		/*
		 * 
		 *    00000101 > 4             00000101
		 * &  00000011 > 3           | 00000011
		 * ---------------------------------------------
		 *    00000001                 00000111
		 */
		
		

	}

}
